{"version":3,"sources":["components/SearchBar.js","api/unslash.js","components/Loader.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","term","setTerm","onSubmit","className","type","value","onChange","e","target","axios","create","baseURL","headers","Authorization","Loader","style","margin","ImageCard","image","alt_description","urls","alt","src","regular","ImageList","props","useState","images","setImages","column","setColumn","data","imageList","page","totalPage","useEffect","n","i","push","filter","j","splitImageList","window","addEventListener","setColumns","width","innerWidth","c","dataLength","length","next","loadPhotos","hasMore","loader","map","imageArr","id","key","renderImages","initialData","total","App","setData","loading","setLoading","a","unslash","get","params","query","per_page","response","concat","results","total_pages","paddingTop","preventDefault","marginBottom","ReactDOM","render","document","getElementById"],"mappings":"iOAmBeA,EAjBG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAClC,OACE,yBAAKC,UAAU,cACb,0BAAMD,SAAUA,EAAUC,UAAU,WAClC,yBAAKA,UAAU,SACb,+CACA,2BACEC,KAAK,OACLC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOH,c,QCT/BI,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,4BACTC,QAAS,CACPC,cAAe,2D,QCMJC,MATf,WACE,OACE,yBACEC,MAAO,CAAEC,OAAQ,aACjBb,UAAU,sCCIDc,EARG,SAAC,GAA0C,IAAD,IAAvCC,MAASC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,KAC7C,OACE,yBAAKjB,UAAU,cACb,yBAAKkB,IAAKF,EAAiBG,IAAKF,EAAKG,YC6D5BC,G,MA3DG,SAACC,GACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAA+CL,EAAMM,KAArCC,EAAhB,EAAQL,OAAmBM,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,UAUjCC,qBAAU,WACRP,EATqB,SAACI,EAAWI,GAEjC,IADA,IAAMT,EAAS,GADwB,WAE9BU,GACPV,EAAOW,KAAKN,EAAUO,QAAO,SAAChC,EAAGiC,GAAJ,OAAUA,EAAIJ,IAAMC,OAD1CA,EAAI,EAAGA,EAAID,EAAGC,IAAM,EAApBA,GAGT,OAAOV,EAIGc,CAAeT,EAAWH,MACnC,CAACG,EAAWH,IAEfM,qBAAU,WACRO,OAAOC,iBAAiB,UAAU,WAChCC,OAEFA,OAGF,IAAMA,EAAa,WACjB,IAAMC,EAAQH,OAAOI,WACjBC,EAAI,GACUA,EAAdF,GAAS,IAAS,EACbA,GAAS,IAAS,EAClB,KAEChB,GAAQC,EAAUiB,IAa9B,OACE,kBAAC,IAAD,CACEC,WAAYhB,EAAUiB,OACtBC,KAAMzB,EAAM0B,WACZC,QAASnB,EAAOC,EAChBmB,OAAQ,kBAAC,EAAD,OAER,yBAAKlD,UAAU,aAAaY,MAAO,CAAE,YAAY,GAAZ,OAAgBc,KAClDF,EAAO2B,KAAI,SAACC,EAAUC,GAAX,OAlBG,SAACD,EAAUC,GAC9B,OACE,yBAAKC,IAAKD,GACPD,EAASD,KAAI,SAACpC,GAAD,OACZ,kBAAC,EAAD,CAAWuC,IAAKvC,EAAMsC,GAAItC,MAAOA,QAcLwC,CAAaH,EAAUC,UCtDvDG,EAAc,CAClBhC,OAAQ,GACRiC,MAAO,EACP1B,UAAW,EACXD,KAAM,GA0DO4B,EAvDH,WACV,MAAwBnC,mBAAS,IAAjC,mBAAO1B,EAAP,KAAaC,EAAb,KACA,EAAwByB,mBAASiC,GAAjC,mBAAO5B,EAAP,KAAa+B,EAAb,KACA,EAA8BpC,oBAAS,GAAvC,mBAAOqC,EAAP,KAAgBC,EAAhB,KAQMb,EAAU,uCAAG,4BAAAc,EAAA,yDACZjE,EADY,0CACC,GADD,cAEjBgE,GAAW,GAFM,SAIME,EAAQC,IAAI,iBAAkB,CACnDC,OAAQ,CAAEC,MAAOrE,EAAMsE,SAAU,GAAIrC,KAAMF,EAAKE,KAAO,KALxC,WAIXsC,EAJW,QAQHxC,KARG,uBASfiC,GAAW,GATI,mBAUR,GAVQ,OAajBF,GAAQ,SAAC/B,GAAD,MAAW,CACjBJ,OAAQI,EAAKJ,OAAO6C,OAAOD,EAASxC,KAAK0C,SACzCxC,KAAMF,EAAKE,KAAO,EAClB2B,MAAOW,EAASxC,KAAK6B,MACrB1B,UAAWqC,EAASxC,KAAK2C,gBAE3BV,GAAW,GAnBM,4CAAH,qDAsBhB,OACE,yBAAK7D,UAAU,eAAeY,MAAO,CAAE4D,WAAY,SACjD,kBAAC,EAAD,CAAW3E,KAAMA,EAAMC,QAASA,EAASC,SA9BxB,SAACK,GACpBA,EAAEqE,iBACFd,EAAQH,GACRR,OA6BGY,GAAyB,IAAdhC,EAAKE,KACf,kBAAC,EAAD,MACgB,IAAdF,EAAKE,MAAqC,IAAvBF,EAAKJ,OAAOsB,OACjC,yBAAKlC,MAAO,CAAE8D,aAAc,QAAU1E,UAAU,sBAAhD,qBAIA,oCACE,yBAAKY,MAAO,CAAE8D,aAAc,QAAU1E,UAAU,kBAAhD,UACU4B,EAAK6B,MADf,WAGA,kBAAC,EAAD,CAAW7B,KAAMA,EAAMoB,WAAYA,OCzD7C2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6759d33a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBar = ({ term, setTerm, onSubmit }) => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <form onSubmit={onSubmit} className=\"ui form\">\r\n        <div className=\"field\">\r\n          <label>Image Search</label>\r\n          <input\r\n            type=\"text\"\r\n            value={term}\r\n            onChange={(e) => setTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.unsplash.com/',\r\n  headers: {\r\n    Authorization: 'Client-ID J-Gq9L2pa4yT17cN0ZknmptH9ILo8zOTv4P0Ik-2Frg',\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div\r\n      style={{ margin: \"5rem auto\" }}\r\n      className=\"ui active centered inline loader\"\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst ImageCard = ({ image: { alt_description, urls } }) => {\r\n  return (\r\n    <div className=\"image-card\">\r\n      <img alt={alt_description} src={urls.regular} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport Loader from './Loader';\r\nimport ImageCard from './ImageCard';\r\nimport './ImageList.css';\r\n\r\nconst ImageList = (props) => {\r\n  const [images, setImages] = useState([]);\r\n  const [column, setColumn] = useState(0);\r\n\r\n  const { images: imageList, page, totalPage } = props.data;\r\n\r\n  const splitImageList = (imageList, n) => {\r\n    const images = [];\r\n    for (let i = 0; i < n; i++) {\r\n      images.push(imageList.filter((e, j) => j % n === i));\r\n    }\r\n    return images;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImages(splitImageList(imageList, column));\r\n  }, [imageList, column]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      setColumns();\r\n    });\r\n    setColumns();\r\n  });\r\n\r\n  const setColumns = () => {\r\n    const width = window.innerWidth;\r\n    var c = 0;\r\n    if (width >= 992) c = 3;\r\n    else if (width >= 768) c = 2;\r\n    else c = 1;\r\n\r\n    if (c !== column) setColumn(c);\r\n  };\r\n\r\n  const renderImages = (imageArr, id) => {\r\n    return (\r\n      <div key={id}>\r\n        {imageArr.map((image) => (\r\n          <ImageCard key={image.id} image={image} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={imageList.length}\r\n      next={props.loadPhotos}\r\n      hasMore={page < totalPage}\r\n      loader={<Loader />}\r\n    >\r\n      <div className=\"image-list\" style={{ '--columns': `${column}` }}>\r\n        {images.map((imageArr, id) => renderImages(imageArr, id))}\r\n      </div>\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default ImageList;\r\n","import React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport unslash from '../api/unslash';\nimport ImageList from './ImageList';\nimport Loader from './Loader';\n\nconst initialData = {\n  images: [],\n  total: 0,\n  totalPage: 0,\n  page: 0,\n};\n\nconst App = () => {\n  const [term, setTerm] = useState('');\n  const [data, setData] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setData(initialData);\n    loadPhotos();\n  };\n\n  const loadPhotos = async () => {\n    if (!term) return false;\n    setLoading(true);\n\n    const response = await unslash.get('/search/photos', {\n      params: { query: term, per_page: 20, page: data.page + 1 },\n    });\n\n    if (!response.data) {\n      setLoading(false);\n      return false;\n    }\n\n    setData((data) => ({\n      images: data.images.concat(response.data.results),\n      page: data.page + 1,\n      total: response.data.total,\n      totalPage: response.data.total_pages,\n    }));\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"ui container\" style={{ paddingTop: '2rem' }}>\n      <SearchBar term={term} setTerm={setTerm} onSubmit={handleSearch} />\n\n      {loading && data.page === 0 ? (\n        <Loader />\n      ) : data.page === 1 && data.images.length === 0 ? (\n        <div style={{ marginBottom: '1rem' }} className=\"ui red large label\">\n          NO Images Found!!\n        </div>\n      ) : (\n        <>\n          <div style={{ marginBottom: '1rem' }} className=\"ui large label\">\n            Found: {data.total} images\n          </div>\n          <ImageList data={data} loadPhotos={loadPhotos} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}